---
name: CI
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
    types: [assigned, opened, edited, synchronize, reopened]
  pull_request_target:
    types: [assigned, opened, edited, synchronize, reopened]
env:
  PACKAGE_VERSION: 0.0.1
  PYPI_REPO: ${{ secrets.DSE_PYPI_REPO }}
  PYPI_USER: ${{ secrets.DSE_PYPI_USER }}
  PYPI_TOKEN: ${{ secrets.DSE_PYPI_TOKEN }}
jobs:
  build:
    name: Build
    runs-on: [ubuntu-latest]
    container:
      image: python:3.9-bullseye
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Package meta
        id: package_meta
        uses: docker/metadata-action@v3
        with:
          images: foo/bar
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Get Package Version
        if: startsWith(github.ref, 'refs/tags/')
        id: package
        run: |
          echo "PACKAGE_VERSION=${{ fromJSON(steps.package_meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_ENV

      - name: Build
        run: |
          make build

      - name: Test
        run: |
          pip install -r requirements.txt
          make install
          make test

      - uses: actions/upload-artifact@v4
        with:
          name: dist_dir
          path: |
            dist/
          retention-days: 1

  publish:
    name: Publish
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: [ubuntu-latest]
    container:
      image: python:3.9-bullseye
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: dist_dir
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
          files: |
            dist/*

      - name: Publish
        if: ${{ env.PYPI_REPO != '' }}
        run: |
          pip install -r requirements.txt
          make push
